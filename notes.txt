to do,

create models,*
create user Sign,*
create my profile*
  add neighbourhood*
  add your profile*
  add forms for neighbourhood and user*

edit/update neighbourhood
view neighbourhood notice
view all neighbourhoods to pick emergency_service
emergency_services for given neighbourhood
view posts and from given neighbourhood
  view emergency_services
Business search
change my neighbourhood page

Pages

User sign in
Set up profile
FInd contact information for authorities in neighbourhood
Profile Pages
  change my neighbourhood
view single neighbourhood details

Features
Business search


Models

Posts class
Title
user foreign key
post_Name

neighbourhood class
neighbourhood Name
neighbourhood location
Occupants Count
Admin Foreign key

create_neighbourhoodd()
delete_neigborhood()
find_neigborhood(neigborhood_id)
update_neighbourhood()
update_occupants()

User class
Name,
ID (national ID)
 foreignkey

Business class
Name,
User foreign foreignkey
neighbourhood foreignkey
Business email address

create_business()
delete_business()
find_business(business_id)
update_business()


@login_required(login_url='/accounts/login/')
def profile(request):
    current_user=request.User
    actual_user = user.objects.get(name=current_user)

    try:
        userposts = posts.objects.filter(Q(user_name=actual_user))
    except posts.DoesNotExist:
        userposts = ""
    try:
        userhood = neighbourhood.objects.get(username=current_user)
    except Profile.DoesNotExist:
        profiles = ""

    if request.method == 'POST':
        form = NewUserForm(request.POST, request.FILES)
        if form.is_valid():
            newuser = form.save(commit=False)
            newhood.admin = current_user
            newhood.save()
            newhood.update_occupants(newhood.id)
        return redirect(profile)

    else:
        form = NewNeighbourhoodForm()
    return render(request, 'accounts/profile.html', {"form": form, "userposts":userposts,  "actual_user":actual_user})
